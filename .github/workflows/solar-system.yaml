name: Solar System Workflow

on:
    workflow_dispatch: 
    push: 
        branches: 
            - main
            - 'feature/*'
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
          matrix:
            nodejs_version: [18, 20]
            operating_system: [ubuntu-latest]
            exclude:
              - nodejs_version: 18
                operating_system: macos-latest
        runs-on: ${{ matrix.operating_system }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
            - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodejs_version }}
            - name: Cache NPM dependencies
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

            - name: Install Dependencies
              run: npm install
            - name: Unit Testing
              id: nodejs-unit-testing-step
              run: npm test
            - name: Archive Test Results
              if: always()
              uses: actions/upload-artifact@v3
              with:
                name: Mocha-Test-Results
                path: test-results.xml
    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
            - name: Setup NodeJS Version - 18
              uses: actions/setup-node@v3
              with:
                node-version: 18
            - name: Cache NPM dependencies
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            - name: Install Dependencies
              run: npm install
            - name: Check Code Coverage
              continue-on-error: true
              run: npm run coverage
            - name: Archive Test Results
              uses: actions/upload-artifact@v3
              with:
                name: Code-Coverage-Results
                path: coverage
                retention-days: 5
    
    docker:
        name: Containerization
        runs-on: ubuntu-latest
        needs: [unit-testing, code-coverage]
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4 
          - name: Dockerhub Login
            uses: docker/login-action@v2.2.0
            with:
              username: ${{ vars.DCOKERHUB_USERNAME }}
              password: ${{ secrets.DCOKERHUB_PASSWORD }}
          - name: Docker Build For Testing
            uses: docker/build-push-action@v4
            with:
              context: .
              push: false
              tags: ${{ vars.DCOKERHUB_USERNAME }}/solar-system:${{ github.sha }}
          - name: Docker Image Test
            run: |
              docker images
              docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{ vars.DCOKERHUB_USERNAME }}/solar-system:${{ github.sha }}
              export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
              echo $IP

              echo Testing Image URL using wget
              wget -q -O - 127.0.0.1:3000/live | grep live

              